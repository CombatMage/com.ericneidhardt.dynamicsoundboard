<root>
    <item name='freemarker.ext.beans._MethodUtil freemarker.template.TemplateModelException newInvocationTemplateModelException(java.lang.Object, java.lang.reflect.Member, java.lang.Throwable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.IteratorModel freemarker.template.TemplateModelIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.SimpleMapModel java.lang.Object exec(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.TemplateMethodModelEx wrap(java.lang.Object, java.lang.reflect.Method)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.ResourceBundleModel java.lang.Object exec(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.TemplateModel getInstance(java.lang.Object, freemarker.ext.util.ModelFactory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapperBuilder freemarker.ext.beans.BeansWrapper build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper BeansWrapper(freemarker.ext.beans.BeansWrapperConfiguration, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.ArrayModel ArrayModel(java.lang.Object, freemarker.ext.beans.BeansWrapper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.SimpleMapModel freemarker.template.TemplateCollectionModel keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil freemarker.template.TemplateModelException newInvocationTemplateModelException(java.lang.Object, freemarker.ext.beans.CallableMemberDescriptor, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper void coerceBigDecimals(java.lang.Class[], java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansModelCache boolean isCacheable(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.SimpleMethodModel java.lang.Object exec(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper BeansWrapper(freemarker.ext.beans.BeansWrapperConfiguration, boolean, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.ResourceBundleModel java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.EnumerationModel freemarker.template.TemplateModelIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.Version normalizeIncompatibleImprovementsVersion(freemarker.template.Version)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil freemarker.template.TemplateModelException newInvocationTemplateModelException(java.lang.Object, freemarker.ext.beans.CallableMemberDescriptor, java.lang.Throwable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.Version normalizeIncompatibleImprovementsVersion(freemarker.template.Version) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeanModel freemarker.template.TemplateModel getAPI()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.OverloadedMethodsModel java.lang.Object exec(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeansModelCache freemarker.template.TemplateModel create(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeanModel freemarker.template.TemplateCollectionModel values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper void coerceBigDecimals(java.lang.Class[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.ResourceBundleModel freemarker.template.TemplateModel invokeGenericGet(java.util.Map, java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans._BeansAPI freemarker.ext.beans.BeansWrapper getBeansWrapperSubclassSingleton(freemarker.ext.beans.BeansWrapperConfiguration, java.util.Map, java.lang.ref.ReferenceQueue, freemarker.ext.beans._BeansAPI._BeansWrapperSubclassFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.ext.util.ModelFactory getModelFactory(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.MapModel freemarker.template.TemplateModel invokeGenericGet(java.util.Map, java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.SimpleMapModel freemarker.template.TemplateCollectionModel values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil boolean isVarargs(java.lang.reflect.Member) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper BeansWrapper(freemarker.template.Version) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil freemarker.template.TemplateModelException newInvocationTemplateModelException(java.lang.Object, java.lang.reflect.Member, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.ext.beans.BeansWrapper getDefaultInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper void removeFromClassIntrospectionCache(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.Version getIncompatibleImprovements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapperBuilder BeansWrapperBuilder(freemarker.template.Version) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.TemplateMethodModelEx wrap(java.lang.Object, java.lang.reflect.Method) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._BeansAPI java.lang.Object newInstance(java.lang.Class, java.lang.Object[], freemarker.ext.beans.BeansWrapper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil java.lang.String toString(java.lang.reflect.Member) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.MethodAppearanceFineTuner void process(freemarker.ext.beans.BeansWrapper.MethodAppearanceDecisionInput, freemarker.ext.beans.BeansWrapper.MethodAppearanceDecision) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeanModel freemarker.template.TemplateModel invokeGenericGet(java.util.Map, java.lang.Class, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BooleanModel BooleanModel(java.lang.Boolean, freemarker.ext.beans.BeansWrapper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil java.lang.Class[] getParameterTypes(java.lang.reflect.Member) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._BeansAPI java.lang.String getAsClassicCompatibleString(freemarker.ext.beans.BeanModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._BeansAPI._BeansWrapperSubclassFactory freemarker.ext.beans.BeansWrapper create(freemarker.ext.beans.BeansWrapperConfiguration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeanModel freemarker.template.TemplateModel get(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.SimpleMethodModel java.lang.Object[] explainTypeError(java.lang.Class[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans._MethodUtil java.lang.Object[] invocationErrorMessageStart(java.lang.reflect.Member)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeanModel java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.MapModel java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeanModel freemarker.template.TemplateCollectionModel keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.TemplateHashModel getStaticModels()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.ArrayModel freemarker.template.TemplateModelIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil java.util.Set getAssignables(java.lang.Class, java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._BeansAPI freemarker.ext.beans.BeansWrapper getBeansWrapperSubclassSingleton(freemarker.ext.beans.BeansWrapperConfiguration, java.util.Map, java.lang.ref.ReferenceQueue, freemarker.ext.beans._BeansAPI._BeansWrapperSubclassFactory) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._BeansAPI._BeansWrapperSubclassFactory freemarker.ext.beans.BeansWrapper create(freemarker.ext.beans.BeansWrapperConfiguration) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeansWrapperConfiguration freemarker.template.Version getIncompatibleImprovements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.SimpleMapModel freemarker.template.TemplateModel get(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper void coerceBigDecimals(java.lang.reflect.AccessibleObject, java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._MethodUtil java.util.Set getAssignables(java.lang.Class, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapper freemarker.template.TemplateHashModel wrapAsAPI(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.BeansWrapperConfiguration BeansWrapperConfiguration(freemarker.template.Version, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._EnumModels freemarker.template.TemplateModel createModel(java.lang.Class) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans._EnumModels freemarker.template.TemplateModel get(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='freemarker.ext.beans.BeansWrapperConfiguration BeansWrapperConfiguration(freemarker.template.Version) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.CollectionModel freemarker.template.TemplateModelIterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='freemarker.ext.beans.MapModel java.lang.Object exec(java.util.List) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
