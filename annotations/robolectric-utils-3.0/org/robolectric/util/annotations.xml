<root>
    <item name='org.robolectric.util.Strings java.lang.String nullToEmpty(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util int parseInt(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;[] fromComponentLists(java.lang.Class&lt;?&gt;[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers void setStaticField(java.lang.reflect.Field, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util java.net.URL url(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util byte[] readBytes(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter java.lang.Object[] getValues(org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util void copy(java.io.InputStream, java.io.OutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers void setField(java.lang.Object, java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter org.robolectric.util.ReflectionHelpers.ClassParameter&lt;V&gt; from(java.lang.Class&lt;? extends V&gt;, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R getStaticField(java.lang.reflect.Field) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R getStaticField(java.lang.Class&lt;?&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R getField(java.lang.Object, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util java.util.List&lt;java.lang.Integer&gt; intArrayToList(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Join java.lang.String join(java.lang.String, java.lang.Object...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callInstanceMethod(java.lang.Object, java.lang.String, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callConstructor(java.lang.Class&lt;? extends R&gt;, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers java.lang.Class&lt;?&gt; loadClass(java.lang.ClassLoader, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util java.io.File file(java.io.File, java.lang.String...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers T newInstance(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;[] fromComponentLists(java.lang.Class&lt;?&gt;[], java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callInstanceMethod(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.String, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callInstanceMethod(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.String, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callStaticMethod(java.lang.Class&lt;?&gt;, java.lang.String, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util java.util.List&lt;java.lang.Integer&gt; intArrayToList(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callStaticMethod(java.lang.Class&lt;?&gt;, java.lang.String, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers void setField(java.lang.Class&lt;?&gt;, java.lang.Object, java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Pair org.robolectric.util.Pair&lt;A,B&gt; create(A, B)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Strftime java.lang.String format(java.lang.String, java.util.Date, java.util.Locale, java.util.TimeZone) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util T[] reverse(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callInstanceMethod(java.lang.Object, java.lang.String, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers void setStaticField(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter java.lang.Object[] getValues(org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util T[] reverse(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Join java.lang.String join(java.lang.String, java.util.Collection) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Strings java.lang.String fromStream(java.io.InputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.StringParameter org.robolectric.util.ReflectionHelpers.StringParameter&lt;V&gt; from(java.lang.String, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util java.io.File file(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter java.lang.Class&lt;?&gt;[] getClasses(org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Transcript void assertEventsInclude(java.lang.String...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers R callConstructor(java.lang.Class&lt;? extends R&gt;, org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.ReflectionHelpers.ClassParameter java.lang.Class&lt;?&gt;[] getClasses(org.robolectric.util.ReflectionHelpers.ClassParameter&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.robolectric.util.Util java.net.URL url(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
