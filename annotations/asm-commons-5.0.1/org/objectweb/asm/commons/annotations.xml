<root>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void newInstance(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void astore(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingMethodAdapter org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, org.objectweb.asm.TypePath, org.objectweb.asm.Label[], org.objectweb.asm.Label[], int[], java.lang.String, boolean) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void newarray(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void areturn(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void neg(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void tableSwitch(int[], org.objectweb.asm.commons.TableSwitchGenerator, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void ushr(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void instanceOf(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitReturnType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void checkCast(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void getField(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void mul(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void arrayStore(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void math(int, org.objectweb.asm.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void load(int, org.objectweb.asm.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void storeLocal(int, org.objectweb.asm.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void shr(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Remapper java.lang.String[] mapTypes(java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeInterface(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void swap(org.objectweb.asm.Type, org.objectweb.asm.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void unbox(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.reflect.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter org.objectweb.asm.Label newLabel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void anew(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.LocalVariablesSorter org.objectweb.asm.AnnotationVisitor visitLocalVariableAnnotation(int, org.objectweb.asm.TypePath, org.objectweb.asm.Label[], org.objectweb.asm.Label[], int[], java.lang.String, boolean) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.reflect.Method)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingClassAdapter org.objectweb.asm.FieldVisitor createRemappingFieldAdapter(org.objectweb.asm.FieldVisitor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void box(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void getStatic(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeStatic(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter GeneratorAdapter(int, org.objectweb.asm.commons.Method, java.lang.String, org.objectweb.asm.Type[], org.objectweb.asm.ClassVisitor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void valueOf(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitArrayType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void tableSwitch(int[], org.objectweb.asm.commons.TableSwitchGenerator) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void arrayLoad(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void putField(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitInterface()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void putStatic(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void and(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void swap(org.objectweb.asm.Type, org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeInterface(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void checkcast(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter GeneratorAdapter(int, org.objectweb.asm.commons.Method, java.lang.String, org.objectweb.asm.Type[], org.objectweb.asm.ClassVisitor) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeVirtual(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingMethodAdapter void visitInvokeDynamicInsn(java.lang.String, java.lang.String, org.objectweb.asm.Handle, java.lang.Object...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void getField(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void store(int, org.objectweb.asm.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Remapper org.objectweb.asm.signature.SignatureVisitor createRemappingSignatureAdapter(org.objectweb.asm.signature.SignatureVisitor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeStatic(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void ifCmp(org.objectweb.asm.Type, int, org.objectweb.asm.Label) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void sub(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitExceptionType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.CodeSizeEvaluator void visitTableSwitchInsn(int, int, org.objectweb.asm.Label, org.objectweb.asm.Label...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void tableSwitch(int[], org.objectweb.asm.commons.TableSwitchGenerator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingClassAdapter org.objectweb.asm.MethodVisitor createRemappingMethodAdapter(int, java.lang.String, org.objectweb.asm.MethodVisitor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeConstructor(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void visitLdcInsn(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitSuperclass()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void div(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.LocalVariablesSorter int newLocal(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter org.objectweb.asm.Label mark()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitParameterType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.CodeSizeEvaluator void visitLookupSwitchInsn(org.objectweb.asm.Label, int[], org.objectweb.asm.Label[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void add(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void or(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.reflect.Constructor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void xor(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeVirtual(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void tableSwitch(int[], org.objectweb.asm.commons.TableSwitchGenerator, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void rem(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.Method org.objectweb.asm.commons.Method getMethod(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void throwException(org.objectweb.asm.Type, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void instanceOf(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingClassAdapter org.objectweb.asm.AnnotationVisitor createRemappingAnnotationAdapter(org.objectweb.asm.AnnotationVisitor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.LocalVariablesSorter int newLocalMapping(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void getStatic(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void invokeConstructor(org.objectweb.asm.Type, org.objectweb.asm.commons.Method) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void newArray(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter GeneratorAdapter(int, org.objectweb.asm.commons.Method, org.objectweb.asm.MethodVisitor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void putStatic(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void shl(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void loadLocal(int, org.objectweb.asm.Type) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.GeneratorAdapter void putField(org.objectweb.asm.Type, java.lang.String, org.objectweb.asm.Type) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.InstructionAdapter void aload(org.objectweb.asm.Type) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.objectweb.asm.commons.RemappingSignatureAdapter org.objectweb.asm.signature.SignatureVisitor visitClassBound()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
