package org.neidhardt.dynamicsoundboard.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import org.neidhardt.dynamicsoundboard.dao.daohelper.DaoHelperKt;
// KEEP INCLUDES END
/**
 * Entity mapped to table "MEDIA_PLAYER_DATA".
 */
public class MediaPlayerData {

    private Long id;
    /** Not-null value. */
    private String playerId;
    /** Not-null value. */
    private String fragmentTag;
    /** Not-null value. */
    private String label;
    /** Not-null value. */
    private String uri;
    private boolean isLoop;
    private boolean isInPlaylist;
    private Long timePosition;
    private Integer sortOrder;

    // KEEP FIELDS - put your custom fields here
    private boolean isSelectedForDeletion = false;
    // KEEP FIELDS END

    public MediaPlayerData() {
    }

    public MediaPlayerData(Long id) {
        this.id = id;
    }

    public MediaPlayerData(Long id, String playerId, String fragmentTag, String label, String uri, boolean isLoop, boolean isInPlaylist, Long timePosition, Integer sortOrder) {
        this.id = id;
        this.playerId = playerId;
        this.fragmentTag = fragmentTag;
        this.label = label;
        this.uri = uri;
        this.isLoop = isLoop;
        this.isInPlaylist = isInPlaylist;
        this.timePosition = timePosition;
        this.sortOrder = sortOrder;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /** Not-null value. */
    public String getPlayerId() {
        return playerId;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setPlayerId(String playerId) {
        this.playerId = playerId;
    }

    /** Not-null value. */
    public String getFragmentTag() {
        return fragmentTag;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setFragmentTag(String fragmentTag) {
        this.fragmentTag = fragmentTag;
    }

    /** Not-null value. */
    public String getLabel() {
        return label;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setLabel(String label) {
        this.label = label;
    }

    /** Not-null value. */
    public String getUri() {
        return uri;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setUri(String uri) {
        this.uri = uri;
    }

    public boolean getIsLoop() {
        return isLoop;
    }

    public void setIsLoop(boolean isLoop) {
        this.isLoop = isLoop;
    }

    public boolean getIsInPlaylist() {
        return isInPlaylist;
    }

    public void setIsInPlaylist(boolean isInPlaylist) {
        this.isInPlaylist = isInPlaylist;
    }

    public Long getTimePosition() {
        return timePosition;
    }

    public void setTimePosition(Long timePosition) {
        this.timePosition = timePosition;
    }

    public Integer getSortOrder() {
        return sortOrder;
    }

    public void setSortOrder(Integer sortOrder) {
        this.sortOrder = sortOrder;
    }

    // KEEP METHODS - put your custom methods here

	public void insertItemInDatabaseAsync()
	{
		DaoHelperKt.insertIntoDatabaseAsync(this);
	}

    public void updateItemInDatabaseAsync()
	{
		DaoHelperKt.updateDatabaseAsync(this);
    }

    public boolean getIsSelectedForDeletion() {
        return isSelectedForDeletion;
    }

    public void setIsSelectedForDeletion(boolean isSelectedForDeletion) {
        this.isSelectedForDeletion = isSelectedForDeletion;
    }

    @Override
    public String toString() {
        return "MediaPlayerData{" +
                "id=" + id +
                ", playerId='" + playerId + '\'' +
                ", fragmentTag='" + fragmentTag + '\'' +
                ", label='" + label + '\'' +
                ", uri='" + uri + '\'' +
                ", isLoop=" + isLoop +
                ", isInPlaylist=" + isInPlaylist +
                ", timePosition=" + timePosition +
                ", sortOrder=" + sortOrder +
                '}';
    }
    // KEEP METHODS END

}
