buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
		classpath 'org.greenrobot:greendao-gradle-plugin:3.2.1'
	}
}

// for unkown reason greendao needs to be on first position
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

	compileSdkVersion rootProject.ext.compileSdkVersion
	buildToolsVersion rootProject.ext.buildToolsVersion

	dataBinding {
		enabled = true
		version = "2.1.0"
	}

	dexOptions {
		javaMaxHeapSize "4g"
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_7
		targetCompatibility JavaVersion.VERSION_1_7
	}

	lintOptions {
		abortOnError false
		checkReleaseBuilds false
		disable 'PrivateResource'
	}
	
	packagingOptions {
		exclude 'META-INF/LICENSE'
		exclude 'META-INF/NOTICE'
	}
	
	defaultConfig {
		applicationId "org.neidhardt.dynamicsoundboard"
		minSdkVersion project.projectMinSdkVersion
		targetSdkVersion project.projectTargetSdkVersion
		versionCode 22714
		versionName "2.27.14"
		resConfigs "de"
		multiDexEnabled true
	}

	signingConfigs {
		release {
			storeFile file(RELEASE_STORE_FILE)
			storePassword RELEASE_STORE_PASSWORD
			keyAlias RELEASE_KEY_ALIAS
			keyPassword RELEASE_KEY_PASSWORD
		}
	}

	applicationVariants.all { variant ->
		variant.mergeAssets.doFirst {
			File fonts = file("${projectDir}/build/intermediates/exploded-aar/com.github.johnkil.android-robototextview/robototextview/2.4.2/assets/fonts")
			if (fonts.exists()) {
				for (File file : fonts.listFiles()) {
					if (file.getName().contains("RobotoSlab")) {
						println("delete " + file.getName() + " font")
						file.delete()
					};
				}
			}
		}
	}

	buildTypes {
		release {
			signingConfig signingConfigs.release
			minifyEnabled false
			shrinkResources false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
		debug {
			applicationIdSuffix ".debug"
		}
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		debug.java.srcDirs += 'src/debug/kotlin'
		release.java.srcDirs += 'src/release/kotlin'
	}
}

kapt {
	generateStubs = true
}

greendao {
	schemaVersion 15
}

dependencies {
	kapt "com.android.databinding:compiler:$android.dataBinding.version"

	compile fileTree(include: ['*.jar'], dir: 'libs')
	compile project(':safe_async_task')
	compile project(':enhanced_handler')
	compile project(':app_utils')
	compile project(':eventbus_utils')
	compile project(':android_utils')

	testCompile project(':test_utils')

	compile rootProject.ext.libraries.kotlin

	compile rootProject.ext.libraries.rxAndroid
	compile rootProject.ext.libraries.rxKotlin
	compile rootProject.ext.libraries.rxJava

	compile rootProject.ext.libraries.multidex

	compile rootProject.ext.libraries.supportV4
	compile rootProject.ext.libraries.supportV13
	compile rootProject.ext.libraries.supportRecyclerView
	compile rootProject.ext.libraries.supportAppCompat
	compile rootProject.ext.libraries.supportDesign

	compile rootProject.ext.libraries.greendao

	compile rootProject.ext.libraries.greenRobotCommons

	compile rootProject.ext.libraries.exoplayer

	compile rootProject.ext.libraries.jacksonDatabind
	compile rootProject.ext.libraries.jacksonKotlin

	compile rootProject.ext.libraries.robotoTextView

	compile rootProject.ext.libraries.floatingActionButton
	compile rootProject.ext.libraries.materialProgressBar

	compile rootProject.ext.libraries.recyclerViewAnimator

	compile rootProject.ext.libraries.acra
}
